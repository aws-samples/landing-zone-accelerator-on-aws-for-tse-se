homeRegion: {{ AcceleratorHomeRegion }}
######
# Version 1.6.1-a of the configuration introduced this change. If you are upgrading from a previous version,
# review the Identity Center section of the FAQ in this repository before applying this change.
identityCenter:
 name: OrgIdentityCenter
 delegatedAdminAccount: Operations
###
policySets:
  - deploymentTargets:
      organizationalUnits:
        - Root
    policies:
      - name: "{{ AcceleratorPrefix }}-Default-Boundary-Policy"
        policy: iam-policies/boundary-policy.json
      - name: "{{ AcceleratorPrefix }}-Default-SSM-S3-Policy"
        policy: iam-policies/ssm-s3-policy.json
  - deploymentTargets:
      accounts:
        - Management
    policies:
      - name: "{{ AcceleratorPrefix }}-IAM-User-Boundary-Policy"
        policy: iam-policies/iam-user-boundary-policy.json
roleSets:
  - deploymentTargets:
      organizationalUnits:
        - Root
    roles:
      - name: EC2-Default-SSM-AD-Role
        instanceProfile: true
        assumedBy:
          - type: service
            principal: ec2.amazonaws.com
        policies:
          awsManaged:
            - AmazonSSMManagedInstanceCore
            - AmazonSSMDirectoryServiceAccess
            - CloudWatchAgentServerPolicy
            - AmazonInspector2ManagedCispolicy
          customerManaged:
            - "{{ AcceleratorPrefix }}-Default-SSM-S3-Policy"
        boundaryPolicy: "{{ AcceleratorPrefix }}-Default-Boundary-Policy"
      - name: RDGW-Role
        instanceProfile: true
        assumedBy:
          - type: service
            principal: ec2.amazonaws.com
        policies:
          awsManaged:
            - AmazonSSMManagedInstanceCore
            - AmazonSSMDirectoryServiceAccess
            - CloudWatchAgentServerPolicy
            - AmazonInspector2ManagedCispolicy
          customerManaged:
            - "{{ AcceleratorPrefix }}-Default-SSM-S3-Policy"
        boundaryPolicy: "{{ AcceleratorPrefix }}-Default-Boundary-Policy"
      - name: Rsyslog-Role
        instanceProfile: true
        assumedBy:
          - type: service
            principal: ec2.amazonaws.com
        policies:
          awsManaged:
            - AmazonSSMManagedInstanceCore
            - CloudWatchAgentServerPolicy
            - AmazonS3ReadOnlyAccess
          customerManaged:
            - "{{ AcceleratorPrefix }}-Default-SSM-S3-Policy"
        boundaryPolicy: "{{ AcceleratorPrefix }}-Default-Boundary-Policy"
  - deploymentTargets:
      accounts:
        - Perimeter
    roles:
      - name: Firewall-Role
        instanceProfile: true
        assumedBy:
          - type: service
            principal: ec2.amazonaws.com
        policies:
          awsManaged:
            - AmazonSSMManagedInstanceCore
            - CloudWatchAgentServerPolicy
            - AmazonS3ReadOnlyAccess
          customerManaged:
            - "{{ AcceleratorPrefix }}-Default-SSM-S3-Policy"
        boundaryPolicy: AWSAccelerator-Default-Boundary-Policy
groupSets:
  - deploymentTargets:
      accounts:
        - Management
    groups:
      - name: BreakGlassAdmins
        policies:
          awsManaged:
            - AdministratorAccess
      - name: OpsAdmins
        policies:
          awsManaged:
            - AdministratorAccess
userSets:
  - deploymentTargets:
      accounts:
        - Management
    users:
      - username: breakGlassUser01
        group: BreakGlassAdmins
        boundaryPolicy: "{{ AcceleratorPrefix }}-IAM-User-Boundary-Policy"
      - username: breakGlassUser02
        group: BreakGlassAdmins
        boundaryPolicy: "{{ AcceleratorPrefix }}-IAM-User-Boundary-Policy"
managedActiveDirectories:
  - name: "{{ AcceleratorPrefix }}ManagedActiveDirectory"
    type: AWS Managed Microsoft AD
    account: Operations
    region: {{ AcceleratorHomeRegion }}
    dnsName: {{ MadDnsName }}
    netBiosDomainName: {{ MadNetbiosDomainName }}
    description: This directory is a) shared to most accounts in the organization to provide centralized Windows and Linux authentication for cloud workloads, b) used as an identity source for AWS SSO, c) used to inter-connect with on-premises directory services, and d) provides a single identities source for instance and AWS console access.
    edition: Enterprise
    vpcSettings:
      vpcName: Central
      subnets:
        - Central-App-A
        - Central-App-B
    resolverRuleName: "{{ AcceleratorPrefix }}-Endpoint-mad-example-local"
    secretConfig:
      account: Operations
      region: {{ AcceleratorHomeRegion }}
      adminSecretName: my-admin-001
    sharedOrganizationalUnits:
      organizationalUnits:
        - Infrastructure
        - Central
        - Dev
        - Test
        - Prod
        - UnClass
    logs:
      groupName: /AWSAccelerator/MAD/{{MadDnsName}}
## Active Directory Configuration instance need to be deployed after the Managed AD deployment
## See post-install instructions
#    activeDirectoryConfigurationInstance:
#      instanceType: t3.large
#      vpcName: Central
#      subnetName: Central-App-A
#      imagePath: /aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base
#      securityGroupInboundSources:
#        - 10.1.0.0/16
#      instanceRole: RDGW-Role
#      userDataScripts:
#        - scriptName: JoinDomain
#          scriptFilePath: ad-config-scripts/Join-Domain.ps1
#        - scriptName: AWSQuickStart
#          scriptFilePath: ad-config-scripts/AWSQuickStart.psm1
#        - scriptName: ADGroupSetup
#          scriptFilePath: ad-config-scripts/AD-group-setup.ps1
#        - scriptName: ADUserSetup
#          scriptFilePath: ad-config-scripts/AD-user-setup.ps1
#        - scriptName: ADUserGroupSetup
#          scriptFilePath: ad-config-scripts/AD-user-group-setup.ps1
#        - scriptName: ADGroupGrantPermissionsSetup
#          scriptFilePath: ad-config-scripts/AD-group-grant-permissions-setup.ps1
#        - scriptName: ADConnectorPermissionsSetup
#            - "*-View"
#          scriptFilePath: ad-config-scripts/AD-connector-permissions-setup.ps1
#        - scriptName: ConfigurePasswordPolicy
#          scriptFilePath: ad-config-scripts/Configure-password-policy.ps1
#      adGroups:
#        - aws-Provisioning
#        - aws-Billing
#      adPerAccountGroups:
#        - "*-Admin"
#        - "*-PowerUser"
#        - "*-View"
#      adConnectorGroup: ADConnector-grp
#      adPasswordPolicy:
#        history: 24
#        maximumAge: 90
#        minimumAge: 1
#        minimumLength: 14
#        complexity: true
#        reversible: false
#        failedAttempts: 6
#        lockoutDuration: 30
#        lockoutAttemptsReset: 30
#      adUsers:
#        - name: adconnector-user
#          email: {{ ActiveDirectoryConnectorEmail }}
#          groups:
#            - ADConnector-grp
#        - name: User1
#          email: {{ ActiveDirectoryUserEmail }}
#          groups:
#            - aws-Provisioning
#            - "*-View"
#            - "*-Admin"
#            - "*-PowerUser"
#            - AWS Delegated Administrators
#        - name: User2
#          email: {{ ActiveDirectoryReadonlyUserEmail }}
#          groups:
## END